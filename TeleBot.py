import telebot
from telebot import types
from sql import Database
import datetime
import locale
from KCPTapi import GetSchedule,GetTeacherSchedule,GetAllGroups
from CreateImg import getGroupScheduleAsImg,getTeacherScheduleAsImg
import logger
import os

#–ö–ª—é—á –æ—Ç –±–æ—Ç–∞ –∫–æ–ª–ª–µ–¥–∂–∞: 6103760766:AAHwuoOl-2i2jOTty5-roDs889pqtms-eIU
bot = telebot.TeleBot("6103760766:AAHwuoOl-2i2jOTty5-roDs889pqtms-eIU")
bot_id = bot.get_me().id
UsersQueriesCount = 0
TeacherQueriesCount = 0
UserFailsCount = 0
TeacherFailsCount = 0
#region –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def GetPrepodsKeyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    ScheduleButton = types.KeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüóíÔ∏è")
    BackButton = types.KeyboardButton(text="‚óÄÔ∏è")
    keyboard.add(ScheduleButton,BackButton)
    ExitButton = types.KeyboardButton(text="–Ø –Ω–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å‚ùå")
    keyboard.add(ExitButton)
    return keyboard
@staticmethod
def GetGroupsKeyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = types.ReplyKeyboardMarkup(row_width=5)
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    for i in GetAllGroups():
        button = types.KeyboardButton(i)
        keyboard.add(button)
    return keyboard
@staticmethod
def GetSettingsKeyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    ScheduleButton = types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É")
    BackButton = types.KeyboardButton(text="‚óÄÔ∏è")
    keyboard.add(ScheduleButton,BackButton)
    return keyboard
@staticmethod
def GetAdminKeyboard(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    LogsButton = types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏üìù")
    UsersCountButton = types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüë§")
    CountQueriesButton = types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤üìÖ")
    PasswordsButton = types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–πüîí")
    BackButton = types.KeyboardButton(text="‚óÄÔ∏è")
    keyboard.add(LogsButton,UsersCountButton)
    keyboard.add(CountQueriesButton)
    keyboard.add(PasswordsButton)
    keyboard.add(BackButton)
    return keyboard
@staticmethod
def GetMenuKeyboard(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    ScheduleButton = types.KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìù")
    SettingsButton = types.KeyboardButton(text="‚öôÔ∏è")
    keyboard.add(ScheduleButton,SettingsButton)
    if Database.is_user_prepod(message.chat.id):
        PrepodPanelButton = types.KeyboardButton(text="–ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è üéì")
        keyboard.add(PrepodPanelButton)
    return keyboard
@staticmethod
def GetDatesKeyboard(IsTeacher:bool):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    
    keyboard = types.InlineKeyboardMarkup()

    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∞—Ç
    days_of_week = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]

    for i in range(-1, 8):  # –î–æ–±–∞–≤–ª—è–µ–º 8 –¥–Ω–µ–π, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∏ –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–∏–Ω –¥–µ–Ω—å –≤ –∫–æ–Ω–µ—Ü
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        current_date = datetime.datetime.now() + datetime.timedelta(days=i)
        formatted_date = current_date.strftime('%d.%m')  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∫–∞–∫ "–¥–µ–Ω—å –º–µ—Å—è—Ü–∞ –ú–µ—Å—è—Ü"
        
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∏ –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–∏–Ω –¥–µ–Ω—å
        if current_date.weekday() == 6:
            continue

        day_of_week = days_of_week[current_date.weekday()]  # –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏
        button_text = f"{formatted_date} ({day_of_week})"
        if i == 0:
            button_text += " (–°–µ–≥–æ–¥–Ω—è)"
        elif i == 1:
            button_text += " (–ó–∞–≤—Ç—Ä–∞)"
        elif i == -1:
            button_text += " (–í—á–µ—Ä–∞)"

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å callback_data
        if IsTeacher:
            button_day = types.InlineKeyboardButton(text=button_text, callback_data=f"{current_date.strftime('%d.%m.%Y')}*")
        else:
            button_day = types.InlineKeyboardButton(text=button_text, callback_data=current_date.strftime('%d.%m.%Y'))

        keyboard.add(button_day)

    return keyboard
#endregion
#region –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
@bot.message_handler(regexp='–ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–πüîí')
def GetPrepodPasswords(message):
    bot.send_message(message.chat.id, text=Database.GetPrepodPasswords())

@bot.message_handler(regexp='–ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏üìù')
def GetLogsHandler(message):
    with open("app.log", 'rb') as log_file:
        bot.send_document(message.chat.id, log_file)
@bot.message_handler(regexp='–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüë§')
def GetUsersCountHandler(message):
    bot.send_message(message.chat.id,text="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: "+str(Database.GetUsersCount()[0]))
@bot.message_handler(regexp='–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤üìÖ')
def GetQueriesCountHandler(message):
    global TeacherQueriesCount
    global UsersQueriesCount
    global UserFailsCount
    global TeacherFailsCount
    formatted_text = f"""{datetime.datetime.strftime(datetime.datetime.now(),"%d.%m.%Y, %H:%M")}
–ó–∞–ø—Ä–æ—Å—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:
–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {TeacherQueriesCount + UsersQueriesCount}
–ó–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {UsersQueriesCount}
–ò–∑ –Ω–∏—Ö –Ω–µ—É–¥–∞—á–Ω—ã—Ö: {UserFailsCount}
–ó–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: {TeacherQueriesCount}
–ò–∑ –Ω–∏—Ö –Ω–µ—É–¥–∞—á–Ω—ã—Ö: {TeacherFailsCount}"""
    bot.send_message(message.chat.id,formatted_text)
#endregion
#region –ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
@bot.message_handler(regexp='–ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è üéì')
def PrepodPanelButton_Handler(message):
    PrepodPanel(message)
@bot.message_handler(regexp='–Ø –Ω–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å‚ùå')
def DeletePrepod(message):
    Database.RemovePrepodUser(message.chat.id)
    MainMenu(message)
@staticmethod
def PrepodPanel(message):
        bot.send_message(message.chat.id,text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' + Database.getPrepodFioByChatId(message.chat.id),reply_markup=GetPrepodsKeyboard())
@bot.message_handler(regexp='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüóíÔ∏è')
def GetPrepodsSchedule(message):
    bot.send_message(message.chat.id,text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ',reply_markup=GetDatesKeyboard(True))


@bot.message_handler(commands=['pr'])
def PrepodPassword(message):
    if Database.is_user_prepod(message.chat.id):
        bot.send_message(message.chat.id, text='–í—ã —É–∂–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å!') 
        return
    if(len(message.text)>4 and ' ' in message.text):
        if(Database.RegPrepod(message.chat.id, message.text.split(' ')[1])):
            PrepodPanel(message)
        else: bot.send_message(message.chat.id, text='–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')
    else:
        bot.send_message(message.chat.id, text='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /pr [–ü–∞—Ä–æ–ª—å]') 
#endregion
#region –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –º–µ–Ω—é—à–∫–∞–º

@bot.message_handler(regexp='‚óÄÔ∏è')
def BackToMenuBtn_Handler(message):
    MainMenu(message)

@bot.message_handler(regexp='‚öôÔ∏è')
def SettingsBtn_Handler(message):
    SettingsMenu(message)

@bot.message_handler(regexp='–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É')
def ChangeGroupBtn_Handler(message):
    bot.send_message(message.chat.id,text='–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É',reply_markup=GetGroupsKeyboard())
#endregion
#region –ú–µ–Ω—é—à–∫–∏
@staticmethod 
def MainMenu(message):
    if not Database.is_user_exists(message.chat.id):
        bot.send_message(message.chat.id,text='–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –≥—Ä—É–ø–ø—É',reply_markup=GetGroupsKeyboard())
        return
    bot.send_message(message.chat.id,text='–ú–µ–Ω—é\n–ü–æ –æ—à–∏–±–∫–∞–º –ø–∏—Å–∞—Ç—å\n@PikaChu72\n@Lardane\n@bymaginn',reply_markup=GetMenuKeyboard(message))
def SettingsMenu(message):
    bot.send_message(message.chat.id,text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏',reply_markup=GetSettingsKeyboard())
#endregion
#region –°—Ç–∞—Ä—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
@bot.message_handler(commands=['admin'])
def PrepodPassword(message):
    if(len(message.text)>6 and ' ' in message.text):
        if(message.text.split(' ')[1]=="QWERTYQWERTY"):
            bot.send_message(message.chat.id,text='–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å',reply_markup=GetAdminKeyboard(message))
        else: bot.send_message(message.chat.id, text='–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')
    else:
        bot.send_message(message.chat.id, text='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin [–ü–∞—Ä–æ–ª—å]') 
@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id,text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è - –±–æ—Ç –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è TensorFlowKCPTScheduleBot")
    if not Database.is_user_exists(message.chat.id):
        bot.send_message(message.chat.id,text='–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –≥—Ä—É–ø–ø—É',reply_markup=GetGroupsKeyboard())
        return
    MainMenu(message)
@bot.message_handler(regexp='^.*\s([0-9]+(-[0-9]+)+)$')
def on_group_change(message):
    Database.RegUser(message.chat.id,message.text)
    MainMenu(message)
#endregion
#region –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π
@bot.message_handler(regexp='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìù')
def ScheduleButton_handler(message):
    bot.send_message(message.chat.id,text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ',reply_markup=GetDatesKeyboard(False))

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if '*' in call.data:
        global TeacherQueriesCount
        TeacherQueriesCount += 1
        prepod = Database.getPrepodIdByChatId(call.message.chat.id)
        image = getTeacherScheduleAsImg(GetTeacherSchedule(datetime.datetime.strptime(call.data[0:len(call.data)-1],"%d.%m.%Y"),prepod))
        if image != False:
            image.save('table.png')
            with open('table.png', 'rb') as f:
                bot.send_message(call.message.chat.id, text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è "+ prepod+ ' –Ω–∞ ' + call.data[0:len(call.data)-1])
                bot.send_photo(call.message.chat.id,photo=f)
            logger.Log(str(call.message.chat.id)+" "+str(datetime.datetime.now()) + ' teacher success!' )

        else:
            global TeacherFailsCount
            TeacherFailsCount += 1
            bot.send_message(call.message.chat.id,text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ '+call.data[0:len(call.data)-1]+' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            return
    else:
        global UsersQueriesCount
        UsersQueriesCount += 1
        group = Database.GetGroupIdByUserId(call.message.chat.id)
        image = getGroupScheduleAsImg(GetSchedule(datetime.datetime.strptime(call.data,"%d.%m.%Y"), group))
        if image != False:
            image.save('table.png')
            with open('table.png', 'rb') as f:
                bot.send_message(call.message.chat.id, text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è "+ group+ ' –Ω–∞ ' + call.data)
                bot.send_photo(call.message.chat.id,photo=f)
            logger.Log(str(call.message.chat.id)+" "+str(datetime.datetime.now()) + ' success!' )
        else:
            global UserFailsCount
            UserFailsCount += 1
            logger.Log(str(call.message.chat.id)+" –°–µ–π—á–∞—Å: "+str(datetime.datetime.now())+" –ó–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è –¥–∞—Ç–∞: "+call.data+ " –ó–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞: "+Database.GetGroupIdByUserId(call.message.chat.id)+ ' error!' )
            bot.send_message(call.message.chat.id,text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ ' +call.data+' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            return
#endregion
#region –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
Database.StartDatabase()
while 1:
    try:
        logger.Log("Bot Started!")
        bot.polling()
    except Exception as e:
        logger.Log("Bot died!")
        logger.Log(e)
#endregion